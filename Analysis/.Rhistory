head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 1,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,], pre.period, post.period,model.args = list(nseasons = 1,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
impact_dg_1 <- CausalImpact(data_dg[1:19,], pre.period, post.period)
plot(impact_dg_1)
summary(impact_dg_1)
plot(impact_dg_1)$data$mean[1:15]
model_data<-subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data$mean[1:19]
attributes(plot(impact_dg_1))
attributes(plot(impact_dg_1))$data
plot(impact_dg_1)$data
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
attributes(plot(impact_dg_1))$data
plot(impact_dg_1)$data
impact_dg_1 <- CausalImpact(data_dg[1:19,], pre.period, post.period)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
attributes(plot(impact_dg_1))
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data
impact_dg_1 <- CausalImpact(data_dg[1:19], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
plot(impact_dg_1)$data$mean
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=='original')
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
library(CausalImpact)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=='original')
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
library(Rserve)
Rserve()
Rserve(args = "--no-save")
library(Rserve)
Rserve()
Rserve(args = "--no-save")
str(data_dg)
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
attributes(impact_dg_1)
attributes(impact_dg_1$model)
attributes(impact_dg_1$model$bsts.model)
attributes(plot(impact_dg_1))
model_data<-subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
library(CausalImpact)
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 52,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 19,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 7,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 1,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 3,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 3,
season.duration = 2))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 3,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 1,
season.duration = 1))
plot(impact_dg_1)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
install.packages("bsts")
model_data
post.period.response <- y[post.period[1] : post.period[2]]
head(data_dg)
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
post.period.response <- y[post.period[1] : post.period[2]]
post.period.response <- Visits[post.period[1] : post.period[2]]
post.period.response <- data$Visits[post.period[1] : post.period[2]]
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
data_dg$Visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$Visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 1000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
data_dg$Visits[post.period[1] : post.period[2]] <- NA
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
data_dg$Visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$Visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 1000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
install.packages("Rserve")
data_dg$Visits
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
attributes(impact_dg_1)
attributes(impact_dg_1$model)
attributes(impact_dg_1$model$bsts.model)
attributes(plot(impact_dg_1))
model_data<-subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
data_dg$Visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$Visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 1000)
data_dg$Visits
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
attributes(impact_dg_1$summary)
impact_dg_1$summary$p
library(Rserve)
Rserve()
Rserve(args = "--no-save")
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
summary(impact_dg_1, "report")
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
library(CausalImpact)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
data_dg$Visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$Visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 1000)
data_dg$Visits
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 5000)
data_dg$Visits
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
library(Rserve)
Rserve()
Rserve(args = "--no-save")
library(Rserve)
Rserve()
Rserve(args = "--no-save")
library(Rserve)
Rserve()
Rserve(args = "--no-save")
library(Rserve)
Rserve()
Rserve(args = "--no-save")
library(devtools)
library(CausalImpact)
Rserve()
Rserve(args = "--no-save")
library(Rserve)
Rserve()
Rserve(args = "--no-save")
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
attributes(impact_dg_1)
attributes(impact_dg_1$model)
attributes(impact_dg_1$model$bsts.model)
attributes(plot(impact_dg_1))
attributes(impact_dg_1$summary)
impact_dg_1$summary$p
model_data<-subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
data_dg$Visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$Visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 5000)
data_dg$Visits
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
library(CausalImpact)
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
attributes(impact_dg_1)
attributes(impact_dg_1$model)
attributes(impact_dg_1$model$bsts.model)
attributes(plot(impact_dg_1))
attributes(impact_dg_1$summary)
impact_dg_1$summary$p
model_data<-subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
data_dg$Visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$Visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$Passages, ss, niter = 5000)
data_dg$Visits
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
model_data<-subset(plot(impact_dg_1)$data$mean,plot(impact_dg_1)$data$metric=="original")
plot(impact_dg_1)$data
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
attributes(impact_dg_1)
plot(impact_dg_1)$data
post.period.response <- data_dg$Visits[post.period[1] : post.period[2]]
post.period.response
str(data_dg)
post.period.response <- data_dg$visits[post.period[1] : post.period[2]]
data_dg$visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$visits)
ss <- AddLocalLevel(list(), data_dg$visits)
bsts.model <- bsts(data_dg$Visits ~ data_dg$perc_retu_outside+data_dg$perc_retu_street+data_dg$outside+data_dg$street, ss, niter = 5000)
bsts.model <- bsts(data_dg$visits ~ data_dg$perc_retu_outside+data_dg$perc_retu_street+data_dg$outside+data_dg$street, ss, niter = 5000)
data_dg$Visits
data_dg$visits
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
bsts.model <- bsts(data_dg$visits ~ data_dg$street, ss, niter = 5000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
bsts.model <- bsts(data_dg$visits ~ data_dg$street+data_dg$outside, ss, niter = 5000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
bsts.model <- bsts(data_dg$visits ~ data_dg$street+data_dg$perc_retu_street, ss, niter = 5000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
post.period.response <- data_dg$visits[post.period[1] : post.period[2]]
data_dg$visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$visits)
bsts.model <- bsts(data_dg$visits ~ data_dg$perc_retu_outside+data_dg$perc_retu_street+data_dg$outside+data_dg$street, ss, niter = 5000)
bsts.model <- bsts(data_dg$visits ~ data_dg$street+data_dg$perc_retu_street, ss, niter = 5000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
plot(impact_dg_1)
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
subset(plot(impact_dg_1)$data$response,plot(impact_dg_1)$data$metric=="original")
post.period.response <- data_dg$visits[post.period[1] : post.period[2]]
data_dg$visits[post.period[1] : post.period[2]] <- NA
ss <- AddLocalLevel(list(), data_dg$visits)
bsts.model <- bsts(data_dg$visits ~ data_dg$perc_retu_outside+data_dg$perc_retu_street+data_dg$outside+data_dg$street, ss, niter = 5000)
bsts.model <- bsts(data_dg$visits ~ data_dg$street+data_dg$perc_retu_street, ss, niter = 5000)
impact_dg_1 <- CausalImpact(bsts.model = bsts.model, post.period.response = post.period.response)
pre.period <- c(1, 13)
post.period <- c(14, 19)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
summary(impact_dg_1)
summary(impact_dg_1, "report")
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 8)
post.period <- c(9, 12)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
data_dg <- read.csv("~/Desktop/xxxl_test_2.csv", sep=";")
str(data_dg)
head(data_dg)
dim(data_dg)
matplot(data_dg, type = "l")
pre.period <- c(1, 8)
post.period <- c(9, 12)
impact_dg_1 <- CausalImpact(data_dg[1:19,1], pre.period, post.period,model.args = list(nseasons = 2,
season.duration = 1))
plot(impact_dg_1)
data$product <- as.factor(data$product)
# Import Data -------------------------------------------------------------
# Download and install packages
library(fifer) # used for post hoc tests on chi square
library(car) # used for Levene Test
library(pwr) # power tests
setwd("~/Desktop/Foodhacks/Analysis")
raw_data <- read.table("data.txt",sep=",",stringsAsFactors=FALSE,header=TRUE)
str(raw_data)
summary(raw_data)
data <- raw_data
str(raw_data)
data$product <- as.factor(data$product) # change product from integer to factor
str(data)
setwd("~/Desktop/Foodhacks/Analysis")
data <- read.table("data.txt",sep=",",stringsAsFactors=FALSE,header=TRUE)
str(data)
data$product <- as.factor(data$product) # change product from integer to factor
summary(data)
leveneTest(answer ~ product_factor, data=data)
leveneTest(answer ~ product, data=data)
qqmath(scale(data$answer),groups=data$product,abline=c(0,1))
library(fifer) # used for post hoc tests on chi square
library(car) # used for Levene Test
library(pwr) # power tests
qqmath(scale(data$answer),groups=data$product,abline=c(0,1))
library(lattice)
library(ggplot2) # used for charts
geom_boxplot( data = data, stat = "boxplot", position = "dodge", outlier.colour = "black",
outlier.shape = 16, outlier.size = 2, notch = FALSE, notchwidth = 0.5, ...)
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_boxplot()
p <- ggplot(answer, product,data)
p <- ggplot(answer, product,data))
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_boxplot()
p <- ggplot(answer, product, data))
p + geom_boxplot()
barchart(answer~product,data = data)
boxplot(data$answer~data$product)
str(data)
str(data)
# data contains 3 variable:
# 1. id: Represents every user who tested the products
# 2. product: the 3 different prodcuts
# 3. answer: is the user's likelihood of buying the product on a 4-point scale with 1 being the lowest
# and 4 being the highest likelihood
data$product <- as.factor(data$product) # change product from integer to factor
summary(data)
eeg_data <- read.csv("eeg.csv",sep=",",stringsAsFactors=FALSE,header=TRUE)
eeg <- read.csv2("~/Desktop/Foodhacks/Analysis/eeg.csv")
View(eeg)
eeg_data <- read.csv2("~/Desktop/Foodhacks/Analysis/eeg.csv")
str(data)
str(eeg_data)
eeg_data$product <- as.factor(eeg_data$product) # change product from integer to factor
summary(eeg_data)
boxplot(data$answer~data$product)
boxplot(eeg_data$engegement~data$product)
eeg_data$product <- as.factor(eeg_data$product) # change product from integer to factor
summary(eeg_data)
eeg_data <- read.csv2("~/Desktop/Foodhacks/Analysis/eeg.csv")
# Understand Data Structure
str(eeg_data)
eeg_data$product <- as.factor(eeg_data$product) # change product from integer to factor
summary(eeg_data)
# Create a boxplot
boxplot(eeg_data$engegement~data$product)
hist(egg_data$engegement)
hist(eeg_data$engegement)
boxplot(eeg_data$engegement~eeg_data$product)
hist(eeg_data$engegement~eeg_data$product)
boxplot(eeg_data$engegement~eeg_data$product)
leveneTest(engagement ~ product, data=eeg_data)
leveneTest(engagement ~ product, data=eeg_data)
boxplot(eeg_data$engegement~eeg_data$product)
leveneTest(engagement ~ product, data=eeg_data)
eeg_data <- read.csv2("~/Desktop/Foodhacks/Analysis/eeg.csv")
# Understand Data Structure
str(eeg_data)
eeg_data$product <- as.factor(eeg_data$product) # change product from integer to factor
summary(eeg_data)
# Create a boxplot
boxplot(eeg_data$engegement~eeg_data$product)
leveneTest(engagement ~ product, data=eeg_data)
leveneTest(engegement ~ product, data=eeg_data)
leveneTest(engegement ~ product, data=eeg_data)
qqmath(scale(data$answer),groups=data$product,abline=c(0,1))
qqnorm(scale(data$answer))
qqline(scale(data$answer),col="Red") # if line overlaps with data, indication for normal distribution
qqline(scale(data$answer),col="Red") # if line overlaps with data, indication for normal distribution
shapiro.test(data$answer) # if results significant, there is NO normal distribution
leveneTest(answer ~ product, data=data)
qqline(scale(eeg_data$engegement),col="Red") # if line overlaps with data, indication for normal distribution
leveneTest(engegement ~ product, data=eeg_data)
# test for normal distributaion
qqmath(scale(eeg_data$engegement),groups=data$product,abline=c(0,1))
qqnorm(scale(eeg_data$engegement))
qqline(scale(eeg_data$engegement),col="Red") # if line overlaps with data, indication for normal distribution
shapiro.test(eeg_data$engegement) # if results significant, there is NO normal distribution
boxplot(data$answer~data$product)
leveneTest(engegement ~ product, data=eeg_data)
boxplot(eeg_data$engegement~eeg_data$product)
shapiro.test(data$answer) # if results significant, there is NO normal distribution
shapiro.test(eeg_data$engegement) # if results significant, there is NO normal distribution
regression <- lm(eeg_data$engegement~eeg_data$engegement)
regression <- lm(engegement~product, data=eeg_data)
summary(regression)
